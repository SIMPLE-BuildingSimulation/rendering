var searchIndex = JSON.parse('{\
"rendering":{"doc":"","t":[6,17,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,6,4,3,13,13,3,13,13,4,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,3,3,3,0,12,0,10,10,10,12,0,10,12,0,0,10,12,12,12,8,10,10,10,10,11,11,10,3,11,11,11,11,11,12,11,11,11,11,3,11,11,12,12,11,11,11,11,11,11,11,11,11,11,12,11,12,11,3,11,11,11,11,12,11,11,11,11,3,11,11,11,12,11,11,11,11,11,12,12,12,11,3,6,18,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,11,11,5,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,11,11,11,11,3,11,11,5,11,11,11,12,11,11,11,11,12,5,5,5,11,11,11,11,11,12,3,11,11,11,11,11,11,12,11,11,12,12,11,11,11,11,11,11,12,12,12,3,3,3,8,3,3,3,10,12,12,12,12,5,0,11,11,10,5,5,5,5,11,0,10,0,0,0,5,0,12,12,12,12,10,0,11,12,12,0,3,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,3,5,11,11,11,12,11,11,11,11,11,11,12,11,11,11,11,11,11,12,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,12,3,11,11,11,11,5,11,11,11,11,5,11,11,11,11,11,11,3,11,11,11,12,11,11,11,11,12,11,12,11,11,11,11,5,5,5,5,5,5,5,5,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,5,5,5,5,5,5,5,5,5,5,5,5,12,12,8,8,16,8,6,8,8,16,8,8,3,3,3,11,11,11,11,11,11,10,11,10,11,11,10,10,11,10,10,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,5,11,12,10,11,11,11,11,10,5,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,12,12,11,11,12,12,11,11,11,11,11,12,11,3,3,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,5,11,11,11,11,11,11,11,11,11,11,5,5,5,5,5,5,5,3,3,13,13,4,12,11,12,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,12,11,11,11,12,12,11,12,12,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Float","PI","bvh","camera","colour","colourmap","from_radiance","from_simple_model","image","interaction","material","primitive","primitive_samplers","rand","ray","ray_tracer","samplers","scene","BoundingVolumeTree","BucketInfo","FlatInterior","FlatLeaf","FlatNode","Interior","Interior","Interior","Leaf","Leaf","Leaf","Node","ObjectInfo","axis","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","bounds","bounds","bounds","centroid","children","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","count","default","first_prim_offset","flatten_node","from","from","from","from","from","from","from","from","get_bucket_index","index","intersect","into","into","into","into","into","into","into","into","n_prims","new","new","new_interior","new_leaf","nodes","recursive_build","second_child_offset","split_axis","to_owned","to_owned","to_owned","to_owned","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unobstructed_distance","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","Camera","CameraSample","Film","View","camera_trait","field_of_view","film","film_resolution","gen_random_sample","gen_ray","p_film","pinhole","pixel_from_ray","resolution","sample","view","view","view_direction","view_point","view_up","Camera","film_resolution","gen_random_sample","gen_ray","pixel_from_ray","pixel_index","pixel_index","view","Film","aspect_ratio","borrow","borrow_mut","from","into","resolution","try_from","try_into","type_id","vzip","Pinhole","borrow","borrow_mut","film","film_distance","film_resolution","from","gen_random_sample","gen_ray","into","new","pixel_from_ray","try_from","try_into","type_id","u","view","view","vzip","CameraSample","borrow","borrow_mut","from","into","p_film","try_from","try_into","type_id","vzip","View","borrow","borrow_mut","default","field_of_view","from","into","try_from","try_into","type_id","view_direction","view_point","view_up","vzip","RGBSpectrum","Spectrum","WHITE_EFFICACY","add","add_assign","black","blue","borrow","borrow_mut","clone","clone_into","default","div","div","div_assign","div_assign","eq","fmt","fmt","from","gray","green","into","is_black","luminance","max","mul","mul","mul_assign","mul_assign","ne","normalize","one","radiance","red","sub","sub_assign","to_owned","to_string","try_from","try_into","type_id","vzip","zero","map_linear_colour","Scanner","borrow","borrow_mut","consume_char","consume_dielectric","consume_glass","consume_light","consume_metal","consume_mirror","consume_non_white","consume_object","consume_plastic","consume_polygon","consume_source","consume_sphere","consume_token","consume_whitespace","current_char_index","default","error_here","from","get_modifier_index","into","is_done","line","modifiers","reach_next_token","try_from","try_into","type_id","vzip","SimpleModelReader","borrow","borrow_mut","build_scene","default","from","get_modifier_index","into","modifiers","push_substance","substance_to_material","try_from","try_into","type_id","vzip","ImageBuffer","borrow","borrow_mut","colour_to_rgbe","from","from_file","from_pixels","height","index","index_mut","into","new","pixels","rgbe_to_colour","rusty_frexp","rusty_ldexp","save_hdre","try_from","try_into","type_id","vzip","width","Interaction","borrow","borrow_mut","clone","clone_into","default","from","geometry_shading","into","normal","point","prim_index","to_owned","transform","try_from","try_into","type_id","vzip","wo","0","0","Dielectric","Glass","Light","Material","Metal","Mirror","Plastic","colour","colour","colour","colour","colour","cos_and_n","dielectric","emits_direct_light","emits_light","eval_bsdf","fresnel_reflectance","fresnel_te","fresnel_tm","fresnel_transmission_dir","get_possible_paths","glass","id","light","metal","mirror","mirror_direction","plastic","refraction_index","refraction_index","roughness","roughness","sample_bsdf","specular","specular_only","specularity","specularity","ward","Dielectric","borrow","borrow_mut","colour","colour","eval_bsdf","from","get_possible_paths","id","into","refl_trans","refraction_index","sample_bsdf","specular_only","try_from","try_into","type_id","vzip","Glass","any_transmission","borrow","borrow_mut","colour","colour","eval_bsdf","from","get_possible_paths","id","into","refl_trans","refraction_index","sample_bsdf","specular_only","try_from","try_into","type_id","vzip","0","Light","borrow","borrow_mut","colour","emits_direct_light","emits_light","eval_bsdf","from","id","into","sample_bsdf","try_from","try_into","type_id","vzip","Metal","borrow","borrow_mut","colour","colour","eval_bsdf","from","id","into","roughness","sample_bsdf","specularity","try_from","try_into","type_id","vzip","0","Mirror","borrow","borrow_mut","colour","eval_bsdf","eval_mirror_bsdf","from","get_possible_paths","id","into","mirror_bsdf","sample_bsdf","specular_only","try_from","try_into","type_id","vzip","Plastic","borrow","borrow_mut","colour","colour","eval_bsdf","from","id","into","roughness","sample_bsdf","specularity","try_from","try_into","type_id","vzip","cos_and_n","fresnel_reflectance","fresnel_te","fresnel_tm","fresnel_transmission_dir","mirror_direction","evaluate_ward_anisotropic","sample_ward_anisotropic","Cylinder","Primitive","Source","Sphere","Triangle","borrow","borrow_mut","clone","clone_into","direction","from","id","intersect","into","omega","sample_direction","simple_intersect","solid_angle_pdf","to_owned","try_from","try_into","type_id","vzip","world_bounds","0","0","0","0","sample_sphere_surface","sample_triangle_surface","source_direction","source_omega","source_solid_angle_pdf","sphere_direction","sphere_omega","sphere_solid_angle_pdf","triangle_direction","triangle_omega","triangle_solid_angle_pdf","uniform_cone_pdf","0","0","CryptoRng","Distribution","Item","IteratorRandom","RandGen","Rng","RngCore","Seed","SeedableRng","SliceRandom","SmallRng","StdRng","ThreadRng","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choose","choose","choose_multiple","choose_multiple","choose_multiple_fill","choose_multiple_weighted","choose_mut","choose_stable","choose_weighted","choose_weighted_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","equivalent","equivalent","fill","fill_bytes","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from_entropy","from_rng","from_rng","from_rng","from_seed","from_seed","from_seed","gen","gen_bool","gen_range","gen_ratio","get_rng","into","into","into","map","ne","ne","next_u32","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","next_u64","partial_shuffle","random","read","rng","sample","sample","sample_iter","sample_iter","seed_from_u64","shuffle","thread_rng","to_owned","to_owned","to_owned","try_fill","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Ray","borrow","borrow_mut","clone","clone_into","default","depth","direction","from","geometry","interaction","into","origin","refraction_index","specular_depth","to_owned","transform","try_from","try_into","type_id","value","vzip","RayTracer","RayTracerHelper","borrow","borrow","borrow_mut","borrow_mut","count_specular_bounce","default","default","from","from","get_global_illumination","get_local_illumination","into","into","limit_weight","max_depth","n_ambient_samples","n_shadow_samples","nodes","rays","render","sample_light","sample_light_array","trace_ray","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","local_to_world","sample_cosine_weighted_horizontal_hemisphere","uniform_sample_disc","uniform_sample_hemisphere","uniform_sample_horizontal_disc","uniform_sample_sphere","uniform_sample_triangle","Object","Scene","Solar","Visible","Wavelengths","accelerator","add_perez_sky","back_material_index","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","build_accelerator","cast_ray","clone","clone_into","count_all_lights","default","distant_lights","from","from","from","from_radiance","from_radiance_source","from_simple_model","front_material_index","into","into","into","lights","materials","new","objects","primitive","push_material","push_object","rebuild_accelerator","sky","sky_colour","to_owned","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","unobstructed_distance","vzip","vzip","vzip"],"q":["rendering","","","","","","","","","","","","","","","","","","rendering::bvh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::bvh::FlatNode","","rendering::bvh::Node","","rendering::camera","","","","","","","","","","","","","","","","","","","","rendering::camera::camera_trait","","","","","","","","rendering::camera::film","","","","","","","","","","","rendering::camera::pinhole","","","","","","","","","","","","","","","","","","","rendering::camera::sample","","","","","","","","","","rendering::camera::view","","","","","","","","","","","","","","rendering::colour","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::colourmap","rendering::from_radiance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::from_simple_model","","","","","","","","","","","","","","","rendering::image","","","","","","","","","","","","","","","","","","","","","","rendering::interaction","","","","","","","","","","","","","","","","","","","rendering::material","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::material::dielectric","","","","","","","","","","","","","","","","","","rendering::material::glass","","","","","","","","","","","","","","","","","","","rendering::material::light","","","","","","","","","","","","","","","","rendering::material::metal","","","","","","","","","","","","","","","","rendering::material::mirror","","","","","","","","","","","","","","","","","","rendering::material::plastic","","","","","","","","","","","","","","","","rendering::material::specular","","","","","","rendering::material::ward","","rendering::primitive","","","","","","","","","","","","","","","","","","","","","","","","rendering::primitive::Primitive","","","","rendering::primitive_samplers","","","","","","","","","","","","rendering::rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::ray","","","","","","","","","","","","","","","","","","","","","","rendering::ray_tracer","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::samplers","","","","","","","rendering::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct that is instrumental for building the  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Option&lt;Interaction&gt;</code>, containing the first …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if a ray can travel a certain distance without …","","","","","","","","","","","","","","Used for getting a sample ray from the [<code>Camera</code>]","","","","Horizontal angle of the Field of View (i.e., frustum) in …","","Gets the film resolution (width,height) in pixels","Generates a random CameraSample","Generates a ray that will go through the View Point and a …","The position (x,y) within the [<code>Film</code>]","","","Contains the number of Pixels in Width and Height","","","Borrows the view","","","","","Gets the film resolution (width,height) in pixels","Generates a random CameraSample","Generates a ray that will go through the View Point and a …","","","","Borrows the view","","return the Width/height ratio","","","","","Contains the number of Pixels in Width and Height","","","","","","","","","","","","Generates a random CameraSample","Generates a ray that will go through the View Point and a …","","","","","","","A <code>Vector3D</code> which is the result of …","","","","Used for getting a sample ray from the [<code>Camera</code>]","","","","","The position (x,y) within the [<code>Film</code>]","","","","","","","","","Horizontal angle of the Field of View (i.e., frustum) in …","","","","","","","","","","","","The standard Luminious Efficacy of equal white light energy","","","Creates a new Spectrum full of Zeroes","","","","","","","","","","","","","","","Creates a new Spectrum full of equal values <code>v</code>","","","Checks whether <code>Spectrum::black() == self</code>","Calculates a weighted average of RGB colours, returning a …","Gets the maximum of the R, G, and B values","","","","","","Scales the chanels in order to make the radiance equals to …","","Calculates a weighted average of RGB colours, returning a …","","","","","","","","","","","","","","","","Consumes a Light material","Consumes a Light material","Consumes a Light material","Consumes a Metal material","Consumes a Light material","","Consume object","Consumes a Plastic material","Consumes a polygon","Consumes a sphere","Consumes a sphere","Retrieves a token and advances.","","","","","","","","","","","Advances until reaching the next token","","","","","An auxiliar structure only meant to create a Scene from a …","","","","","","","","A list of the modifiers already in the model","Adds a Substance to the Scene, checking if it has been …","Transformsa a SimpleModel Substance into a Material","","","","","A buffer with all the physical values in the image (i.e., …","","","","","Creates a new empty <code>ImageBuffer</code> from a File","Creates a new empty <code>ImageBuffer</code>","Number of rows","","","","Creates a new empty <code>ImageBuffer</code>","All the pixels, iterating from top to bottom, left to right","","Equivalent to C’s <code>frexp</code> function","Equivalent to C’s <code>ldexp</code> function","Saves the image in HDRE format","","","","","Number of columns","The data for a SurfaceInteraction]","","","","","","","Stores the shading information based on pure geometry","","Retrieves the normal of the [<code>SurfaceInteractionData</code>]. …","The <code>Point3D</code> of the interaction","The index of the primitive in the primitives array","","","","","","","The outgoing direction at the interaction. This is the …","","","","","A mirror material","","Information required for modelling Radiance’s Metal and …","A mirror material","Information required for modelling Radiance’s Plastic …","Retrieves the Colour of the material. This will usually …","","","","","Calculates the parameters necessary for calculating the …","","Should this material be tested for direct illumination?    ","Should this material emits light    ","Evaluates a BSDF based on an input and outpt directions","","Fresnel Coefficient for TE-Polarized Light (i.e., …","Fresnel Coefficient for TM-Polarized Light (i.e., …","Calculates the direction of the transmision","","","Returns an id, for debugging and error reporting purposes","","","","Calculates the purely specular reflection direction.","","","","","","Samples the bsdf (returned by modifying the given <code>Ray</code>). …","","Does this material scatter (e.g., like <code>Plastic</code>) or does it …","","","","","","","","","","","","","","Gets the Reflected and Transmitted BSDF values","","","","","","","","","","","","","","","","","","","","","","","","","","","","A mirror material","","","","","Should this material emits light    ","","","","","","","","","","Information required for modelling Radiance’s Metal and …","","","","","","","","","","","","","","","","","A mirror material","","","","","Evaluates the mirror BSDf","","","","","Calculates the Mirror BSDF and modifies the given ray so …","","","","","","","Information required for modelling Radiance’s Plastic …","","","","","","","","","","","","","","","","Calculates the parameters necessary for calculating the …","","Fresnel Coefficient for TE-Polarized Light (i.e., …","Fresnel Coefficient for TM-Polarized Light (i.e., …","Calculates the direction of the transmision","Calculates the purely specular reflection direction.","Evaluates a Ward BSDF, changing the direction of a given …","Samples a Ward BSDF, changing the direction of a given …","","","","","","","","","","","","The name of the <code>Primitive</code>. Useful for debugging.","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","","","","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","","","","","","","Gets a <code>BBox3D</code> bounding the primitive, in world’s …","","","","","","","It is always in the same direction","","","","","","","","","Calculates the probability of hitting a","","","A marker trait used to indicate that an <code>RngCore</code> or …","Types (distributions) that can be used to create a random …","The element type.","Extension trait on iterators, providing random sampling …","","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Extension trait on slices, providing random mutation and …","A small-state, fast non-crypto PRNG","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","A reference to the thread-local generator","","","","","","","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Chooses <code>amount</code> elements from the slice at random, without …","Collects <code>amount</code> values at random from the iterator into a …","Collects values at random from the iterator into a …","Similar to <code>choose_multiple</code>, but where the likelihood of …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Similar to <code>choose</code>, but where the likelihood of each …","Similar to <code>choose_mut</code>, but where the likelihood of each …","","","","","","","","","","","","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","","","","","","","Creates a new instance of the RNG seeded via <code>getrandom</code>.","Create a new PRNG seeded from another <code>Rng</code>.","","","Create a new PRNG using the given seed.","","","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Gets a random number generator for Montecarlo estimations","","","","Create a distribution of values of ‘S’ by mapping the …","","","Return the next random <code>u32</code>.","","","","Return the next random <code>u64</code>.","","","","Shuffle a slice in place, but exit early.","Generates a random value using the thread-local random …","","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","Sample a new value, using the given distribution.","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Shuffle a mutable slice in place.","Retrieve the lazily-initialized thread-local random number …","","","","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","","","","","","","","","","","","Represents a ray (of light?) beyond pure geometry. It …","","","","","","","","","Direction and position","Contains the information about the last hit.","","","index of refraction of the current medium","","","","","","","","","","","","","","","","","","","","","Calculates the luminance produced by the direct sources in …","","","","","","","","","","Sends a <code>shadow_ray</code> towards a <code>light</code>. Returns <code>None</code> if the …","","Recursively traces a ray","","","","","","","","","Transforms a Point from Local Coordinates (defined by the …","Gets a random <code>Vector3D</code>, distributed according to <code>cos(theta)</code>…","","","","","","","","","","","The acceleration structure that helps trace rays.","Adds the elements describing a Perez sky to the scene. The …","","","","","","","","","Casts a <code>Ray3D</code> and returns an <code>Option&lt;Interaction&gt;</code> …","","","Returns the number of total lights; that is, those in the …","","A vector of [<code>Light</code>] objects that are considered sources of …","","","","Reads a Radiance file and builds a scene.","Creates a scene from a slice of bytes read from a Radiance …","Creates a new <code>Scene</code> from a <code>SimpleModel</code>. The <code>enum</code> …","","","","","A vector of [<code>Light</code>] objects that are considered sources of …","The materials in the scene","Creates an empty scene","Objects in the scene that are not tested directly for …","","Pushes a <code>Material</code> to the <code>Scene</code> and return its position in …","Pushes an <code>Object</code> into the <code>Scene</code>","Builds the accelerator","A function returning the diffuse Sky brightness (i.e., …","The colour of the sky, normalized","","","","","","","","","","","Checks whether a <code>Ray3D</code> can travel a certain distance …","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,2,0,1,2,0,0,3,4,5,1,6,7,3,2,8,4,5,1,6,7,3,2,8,1,2,4,5,6,7,3,4,5,6,7,3,2,8,6,7,3,2,8,6,8,7,8,4,5,1,6,7,3,2,8,0,4,8,4,5,1,6,7,3,2,8,7,4,8,1,1,8,1,3,5,6,7,3,2,8,4,5,1,6,7,3,2,8,4,5,1,6,7,3,2,8,4,5,1,6,7,3,2,8,8,4,5,1,6,7,3,2,8,9,10,11,12,0,0,0,0,0,13,0,14,14,14,15,0,14,16,0,0,14,13,13,13,0,14,14,14,14,14,14,14,0,16,16,16,16,16,16,16,16,16,16,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,15,15,15,15,15,15,15,15,15,0,13,13,13,13,13,13,13,13,13,13,13,13,13,0,0,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,18,0,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,20,20,20,20,20,20,20,20,20,20,20,20,0,21,21,0,21,21,21,21,21,21,21,21,21,0,0,0,21,21,21,21,21,21,0,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,23,24,0,0,0,0,0,0,0,25,26,27,28,29,0,0,25,25,25,0,0,0,0,25,0,25,0,0,0,0,0,28,29,26,27,25,0,25,26,27,0,0,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,0,0,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,23,0,23,23,23,23,23,23,23,23,23,23,23,23,23,23,0,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,24,0,24,24,24,24,0,24,24,24,24,0,24,24,24,24,24,24,0,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,0,0,0,0,0,0,0,0,30,0,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,31,32,33,34,0,0,0,0,0,0,0,0,0,0,0,0,35,36,0,0,37,0,0,0,0,38,0,0,0,0,0,35,36,39,35,36,39,37,40,37,40,40,37,37,40,37,37,35,36,39,35,36,39,39,35,36,35,36,41,42,35,36,39,35,36,39,35,36,39,38,38,35,36,38,35,36,41,41,41,41,0,35,36,39,43,35,36,42,35,36,39,42,35,36,39,37,0,42,39,43,41,43,41,38,37,0,35,36,39,41,42,35,36,39,35,36,39,35,36,39,35,36,39,35,36,39,0,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,44,0,0,45,46,45,46,46,45,46,45,46,46,46,45,46,46,46,46,46,45,45,46,0,46,46,45,46,45,46,45,46,45,46,0,0,0,0,0,0,0,0,0,47,47,0,48,48,49,47,49,48,47,49,48,48,48,49,49,48,48,48,47,49,48,48,48,48,49,47,49,48,48,48,48,48,49,48,48,48,48,48,49,47,49,48,47,49,48,47,49,48,48,47,49,48],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bbox3d",3]],[[],["bbox3d",3]],null,null,null,null,null,null,null,[[],["bucketinfo",3]],[[],["leaf",3]],[[],["flatinterior",3]],[[],["flatnode",4]],[[],["boundingvolumetree",3]],[[]],[[]],[[]],[[]],[[]],null,[[],["boundingvolumetree",3]],null,[[["node",4],["vec",3]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["point3d",3],["float",6],["bboxaxis",4],["usize",15],["point3d",3]],["usize",15]],null,[[["ray",3],["vec",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15],["object",3]]],[[["scene",3]]],[[["bboxaxis",4],["node",4],["node",4]]],[[["usize",15],["usize",15],["bbox3d",3]]],null,[[["usize",15],["usize",15],["usize",15],["vec",3]]],null,null,[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ray3d",3],["float",6],["vec",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,[[]],[[["randgen",6]],["camerasample",3]],[[["camerasample",3]]],null,null,[[["ray3d",3]]],null,null,null,[[],["view",3]],null,null,null,null,[[]],[[["randgen",6]],["camerasample",3]],[[["camerasample",3]]],[[["ray3d",3]]],[[],["usize",15]],[[],["usize",15]],[[],["view",3]],null,[[],["float",6]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],null,null,[[]],[[]],[[["randgen",6]],["camerasample",3]],[[["camerasample",3]]],[[]],[[["view",3],["film",3]]],[[["ray3d",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[],["view",3]],null,[[]],null,[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],null,[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,null,null,[[]],null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[],["rgbspectrum",3]],[[]],[[]],[[["float",6]]],[[]],[[]],[[["float",6]]],[[["rgbspectrum",3]],["bool",15]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["float",6]]],null,[[]],[[],["bool",15]],[[],["float",6]],[[],["float",6]],[[["float",6]]],[[]],[[]],[[["float",6]]],[[["rgbspectrum",3]],["bool",15]],[[]],[[]],[[],["float",6]],null,[[]],[[]],[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],[[["float",6],["float",6],["float",6]],["spectrum",6]],null,[[]],[[]],[[],["bool",15]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[],["bool",15]],[[["scene",3]]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[["scene",3],["str",15],["str",15]]],[[],["string",3]],[[],["bool",15]],null,[[],["scanner",3]],[[["string",3]]],[[]],[[["str",15]],["usize",15]],[[]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["simplemodel",3],["wavelengths",4]],["scene",3]],[[],["simplemodelreader",3]],[[]],[[["str",15]],["option",4,[["usize",15]]]],[[]],null,[[["scene",3],["substance",4],["wavelengths",4]],["usize",15]],[[["substance",4],["wavelengths",4]],["box",3,[["material",8]]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["float",6],["float",6],["float",6]]],[[]],[[["path",3]],["result",4,[["string",3]]]],[[["usize",15],["usize",15],["vec",3,[["spectrum",6]]]]],null,[[]],[[]],[[]],[[["usize",15],["usize",15]]],null,[[["u8",15],["u8",15],["u8",15],["u8",15]],["spectrum",6]],[[["float",6]]],[[["float",6],["i32",15]],["float",6]],[[["path",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["interaction",3]],[[]],[[],["interaction",3]],[[]],null,[[]],[[],["vector3d",3]],null,null,[[]],[[["transform",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,null,null,null,null,[[],["spectrum",6]],null,null,null,null,[[["ray",3],["vector3d",3],["float",6]]],null,[[],["bool",15]],[[],["bool",15]],[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[["float",6],["float",6],["float",6],["float",6]],["float",6]],[[["float",6],["float",6],["float",6],["float",6]],["float",6]],[[["float",6],["float",6],["float",6],["float",6]],["float",6]],[[["vector3d",3],["vector3d",3],["float",6],["float",6],["float",6],["float",6]],["vector3d",3]],[[["vector3d",3],["point3d",3],["ray",3]]],null,[[],["str",15]],null,null,null,[[["vector3d",3],["vector3d",3]],["vector3d",3]],null,null,null,null,null,[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],null,[[],["bool",15]],null,null,null,null,[[]],[[]],[[],["spectrum",6]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[]],[[["vector3d",3],["point3d",3],["ray",3]]],[[],["str",15]],[[]],[[["float",6],["float",6],["float",6],["option",4,[["float",6]]]]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[["spectrum",6]],["bool",15]],[[]],[[]],[[],["spectrum",6]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[]],[[["vector3d",3],["point3d",3],["ray",3]]],[[],["str",15]],[[]],[[["float",6],["float",6],["float",6],["option",4,[["float",6]]]]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["spectrum",6]],[[],["bool",15]],[[],["bool",15]],[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[]],[[],["str",15]],[[]],[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["spectrum",6]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[]],[[],["str",15]],[[]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[],["spectrum",6]],[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[["vector3d",3],["vector3d",3],["vector3d",3]],["float",6]],[[]],[[["vector3d",3],["point3d",3],["ray",3]]],[[],["str",15]],[[]],[[["point3d",3],["ray",3],["vector3d",3]],["float",6]],[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],[[],["bool",15]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["spectrum",6]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["vector3d",3]],["spectrum",6]],[[]],[[],["str",15]],[[]],null,[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["ray",3],["randgen",6]]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[["ray",3],["vector3d",3],["float",6]]],[[["float",6],["float",6],["float",6],["float",6]],["float",6]],[[["float",6],["float",6],["float",6],["float",6]],["float",6]],[[["float",6],["float",6],["float",6],["float",6]],["float",6]],[[["vector3d",3],["vector3d",3],["float",6],["float",6],["float",6],["float",6]],["vector3d",3]],[[["vector3d",3],["vector3d",3]],["vector3d",3]],[[["vector3d",3],["vector3d",3],["vector3d",3],["float",6],["float",6],["float",6],["ray",3],["vector3d",3]]],[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["float",6],["float",6],["float",6],["ray",3],["randgen",6]]],null,null,null,null,null,[[]],[[]],[[],["primitive",4]],[[]],[[["point3d",3]]],[[]],[[],["str",15]],[[["ray3d",3]],["option",4,[["intersectioninfo",3]]]],[[]],[[["point3d",3]],["float",6]],[[["randgen",6],["point3d",3]],["vector3d",3]],[[["ray3d",3]],["option",4,[["point3d",3]]]],[[["intersectioninfo",3],["ray3d",3]],["float",6]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bbox3d",3]],null,null,null,null,[[["sphere3d",3],["randgen",6]],["point3d",3]],[[["triangle3d",3],["randgen",6]],["point3d",3]],[[["distantsource3d",3],["point3d",3]]],[[["distantsource3d",3],["point3d",3]],["float",6]],[[["distantsource3d",3],["intersectioninfo",3],["ray3d",3]],["float",6]],[[["sphere3d",3],["point3d",3]]],[[["sphere3d",3],["point3d",3]],["float",6]],[[["sphere3d",3],["intersectioninfo",3],["ray3d",3]],["float",6]],[[["triangle3d",3],["point3d",3]]],[[["triangle3d",3],["point3d",3]],["float",6]],[[["triangle3d",3],["intersectioninfo",3],["ray3d",3]],["float",6]],[[["float",6]],["float",6]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["slicechooseiter",3]],[[["usize",15]],["vec",3,[["global",3]]]],[[],["usize",15]],[[["usize",15]],["result",4,[["slicechooseiter",3],["weightederror",4]]]],[[],["option",4]],[[],["option",4]],[[],["result",4,[["weightederror",4]]]],[[],["result",4,[["weightederror",4]]]],[[],["smallrng",3]],[[],["stdrng",3]],[[],["threadrng",3]],[[]],[[]],[[]],[[],["threadrng",3]],[[["smallrng",3]],["bool",15]],[[["stdrng",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[["formatter",3]],["result",4,[["error",3]]]],[[]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["smallrng",3],["error",3]]]],[[],["result",4,[["stdrng",3],["error",3]]]],[[]],[[],["smallrng",3]],[[],["stdrng",3]],[[]],[[["f64",15]],["bool",15]],[[]],[[["u32",15],["u32",15]],["bool",15]],[[],["randgen",6]],[[]],[[]],[[]],[[],["distmap",3]],[[["smallrng",3]],["bool",15]],[[["stdrng",3]],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["usize",15]]],[[]],[[],["result",4,[["usize",15],["error",3]]]],null,[[]],[[]],[[],["distiter",3]],[[],["distiter",3]],[[["u64",15]]],[[]],[[],["threadrng",3]],[[]],[[]],[[]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4,[["error",3]]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[]],[[]],[[],["ray",3]],[[]],[[]],null,[[],["vector3d",3]],[[]],null,null,[[]],[[],["point3d",3]],null,null,[[]],[[["transform",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],null,[[]],null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[]],[[["scene",3],["usize",15],["usize",15],["usize",15],["box",3],["vector3d",3],["vector3d",3],["vector3d",3],["ray",3],["point3d",3],["float",6],["randgen",6],["raytracerhelper",3]],["spectrum",6]],[[["scene",3],["box",3],["ray",3],["point3d",3],["vector3d",3],["vector3d",3],["vector3d",3],["randgen",6],["usize",15],["usize",15],["vec",3]],["spectrum",6]],[[]],[[]],null,null,null,null,null,null,[[["scene",3],["camera",8]],["imagebuffer",3]],[[["scene",3],["object",3],["ray3d",3],["vec",3]],["option",4]],[[["scene",3],["box",3],["ray",3],["point3d",3],["vector3d",3],["vector3d",3],["vector3d",3],["randgen",6],["usize",15],["usize",15],["vec",3]],["spectrum",6]],[[["randgen",6],["scene",3],["ray",3],["usize",15],["float",6],["raytracerhelper",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[["vector3d",3],["vector3d",3],["vector3d",3],["point3d",3],["float",6],["float",6],["float",6]]],[[["randgen",6]],["vector3d",3]],[[["randgen",6],["float",6],["point3d",3],["vector3d",3]],["point3d",3]],[[["randgen",6],["vector3d",3],["vector3d",3],["vector3d",3]],["vector3d",3]],[[["randgen",6],["float",6]]],[[["randgen",6]],["point3d",3]],[[["randgen",6],["point3d",3],["point3d",3],["point3d",3]],["point3d",3]],null,null,null,null,null,null,[[["date",3],["float",6],["float",6],["float",6],["float",6],["float",6]]],null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["ray",3],["vec",3]],["bool",15]],[[],["object",3]],[[]],[[],["usize",15]],[[],["scene",3]],null,[[]],[[]],[[]],[[["string",3]]],[[]],[[["simplemodel",3],["wavelengths",4]]],null,[[]],[[]],[[]],null,null,[[]],null,null,[[["box",3,[["material",8]]]],["usize",15]],[[["usize",15],["usize",15],["primitive",4]],["usize",15]],[[]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["ray3d",3],["float",6],["vec",3]],["bool",15]],[[]],[[]],[[]]],"p":[[4,"Node"],[4,"FlatNode"],[3,"FlatInterior"],[3,"ObjectInfo"],[3,"Interior"],[3,"BucketInfo"],[3,"Leaf"],[3,"BoundingVolumeTree"],[13,"Interior"],[13,"Leaf"],[13,"Interior"],[13,"Leaf"],[3,"View"],[8,"Camera"],[3,"CameraSample"],[3,"Film"],[3,"Pinhole"],[3,"RGBSpectrum"],[3,"Scanner"],[3,"SimpleModelReader"],[3,"ImageBuffer"],[3,"Interaction"],[3,"Light"],[3,"Mirror"],[8,"Material"],[3,"Plastic"],[3,"Metal"],[3,"Dielectric"],[3,"Glass"],[4,"Primitive"],[13,"Sphere"],[13,"Triangle"],[13,"Cylinder"],[13,"Source"],[3,"SmallRng"],[3,"StdRng"],[8,"SliceRandom"],[8,"SeedableRng"],[3,"ThreadRng"],[8,"IteratorRandom"],[8,"Rng"],[8,"RngCore"],[8,"Distribution"],[3,"Ray"],[3,"RayTracerHelper"],[3,"RayTracer"],[4,"Wavelengths"],[3,"Scene"],[3,"Object"]]},\
"spict":{"doc":"","t":[5],"n":["main"],"q":["spict"],"d":[""],"i":[0],"f":[[[]]],"p":[]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};