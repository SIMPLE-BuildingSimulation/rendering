var searchIndex = JSON.parse('{\
"rendering":{"doc":"","t":[6,17,6,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,3,3,3,6,4,3,13,13,3,13,13,4,3,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,11,11,12,11,12,11,11,11,11,11,11,11,11,11,5,12,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,8,3,3,3,11,11,11,11,11,11,11,12,12,12,10,11,11,11,11,10,11,11,11,11,11,12,12,12,11,11,11,11,11,11,11,11,11,12,10,11,12,12,12,12,11,11,11,6,3,6,11,11,11,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,12,11,11,11,11,11,11,11,3,11,11,11,11,11,12,11,11,11,11,3,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,11,12,12,12,11,11,11,11,11,3,11,11,5,11,12,11,11,11,11,12,5,11,11,11,11,11,12,13,4,3,13,3,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,11,11,11,12,12,12,13,4,13,13,13,3,11,11,11,11,11,12,11,11,11,11,11,5,11,11,11,11,5,5,12,11,11,12,11,11,11,11,11,11,11,11,12,12,12,12,13,4,13,13,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,3,3,3,3,3,3,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,5,5,5,5,5,5,5,12,12,5,5,5,5,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,8,8,16,8,6,8,8,16,8,8,3,3,3,11,11,11,11,11,11,10,11,10,11,11,10,10,11,10,10,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,10,11,11,11,11,11,11,5,11,11,11,11,11,11,10,11,11,11,10,11,11,11,10,5,11,12,10,11,11,11,11,10,5,11,11,11,11,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,3,11,11,11,11,11,11,11,12,11,11,12,11,11,11,11,11,3,11,11,11,11,11,11,12,12,12,12,12,11,11,11,11,11,11,11,3,3,11,11,11,11,12,11,11,12,11,11,11,11,5,12,11,11,11,11,12,12,5,11,11,11,11,11,11,5,5,5,5,11,11,3,3,12,12,11,11,11,11,11,11,11,11,11,11,12,11,11,11,11,12,11,11,12,12,11,12,12,11,11,11,11,11,11,11,11,11,11,11,11],"n":["Float","PI","RefCount","bvh","camera","colour","film","from_radiance","image","interaction","material","primitive","primitive_samplers","rand","ray","ray_tracer","samplers","scene","0","BoundingVolumeTree","BucketInfo","FlatInterior","FlatLeaf","FlatNode","Interior","Interior","Interior","Leaf","Leaf","Leaf","Node","ObjectInfo","axis","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","bounds","bounds","bounds","bounds","bounds","bounds","bounds","centroid","children","clone","clone_into","count","default","first_prim_offset","flatten_node","from","from","from","from","from","from","from","from","get_bucket_index","index","intersect","into","into","into","into","into","into","into","into","n_prims","new","new","new_interior","new_leaf","recursive_build","second_child_offset","split_axis","to_owned","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","unobstructed_distance","vzip","vzip","vzip","vzip","vzip","vzip","vzip","vzip","0","0","0","0","Camera","CameraSample","PinholeCam","View","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","default","field_of_view","film","film_distance","film_resolution","film_resolution","from","from","from","gen_ray","gen_ray","into","into","into","new","p_film","p_lens","time","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u","view","view","view","view_direction","view_point","view_up","vzip","vzip","vzip","ColourMatrix","RGBSpectrum","Spectrum","add","add_assign","black","blue","borrow","borrow_mut","clone","clone_into","div","div_assign","fmt","fmt","from","gray","green","into","is_black","mul","mul","mul_assign","mul_assign","one","red","to_owned","to_string","try_from","try_into","type_id","vzip","zero","Film","aspect_ratio","borrow","borrow_mut","from","into","resolution","try_from","try_into","type_id","vzip","Scanner","borrow","borrow_mut","consume_char","consume_light","consume_metal","consume_mirror","consume_non_white","consume_object","consume_plastic","consume_polygon","consume_source","consume_sphere","consume_token","consume_whitespace","current_char_index","default","error_here","from","get_modifier_index","into","is_done","line","modifiers","reach_next_token","try_from","try_into","type_id","vzip","ImageBuffer","borrow","borrow_mut","float_to_rgbe","from","height","index","index_mut","into","new","pixels","rusty_frexp","save_hdre","try_from","try_into","type_id","vzip","width","Endpoint","Interaction","ShadingInfo","Surface","SurfaceInteractionData","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone_into","dndu","dndv","dpdu","dpdv","fmt","from","from","from","geometry_shading","into","into","into","is_surface_interaction","new","new_surface","normal","normal","normal","point","prim_index","side","texture_shading","time","to_owned","transform","transform","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","u","v","vzip","vzip","vzip","wo","0","0","Light","Material","Metal","Mirror","Plastic","PlasticMetal","borrow","borrow","borrow_mut","borrow_mut","bsdf","color","colour","emits_direct_light","emits_light","eval_bsdf","eval_bsdf","eval_mirror_bsdf","from","from","into","into","mirror_bsdf","mirror_direction","roughness","sample_bsdf","specular_only","specularity","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","0","0","0","0","Cylinder","Primitive","Source","Sphere","Triangle","borrow","borrow_mut","clone","clone_into","direction","direction_sampler","from","id","intersect","into","omega","simple_intersect","to_owned","try_from","try_into","type_id","vzip","world_bounds","0","0","0","0","DistantSourceSampler","InsideSphereDirectionSampler","SphereDirectionSampler","SphereSurfaceSampler","TriangleDirectionSampler","TriangleSurfaceSampler","a","b","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","centre","centre","centre","from","from","from","from","from","from","i","i","i","i","into","into","into","into","into","into","into_iter","into_iter","into_iter","into_iter","into_iter","into_iter","n_samples","n_samples","n_samples","n_samples","next","next","next","next","next","next","normal","normal","radius","radius","radius","ray_origin","ray_origin","ray_origin","ray_origin","rng","rng","rng","rng","source_direction","source_direction_sampler","source_omega","sphere_direction","sphere_direction_sampler","sphere_omega","sphere_surface_sampler","surface_sampler","surface_sampler","triangle_direction","triangle_direction_sampler","triangle_omega","triangle_surface_sampler","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","vzip","0","0","CryptoRng","Distribution","Item","IteratorRandom","RandGen","Rng","RngCore","Seed","SeedableRng","SliceRandom","SmallRng","StdRng","ThreadRng","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","choose","choose","choose_multiple","choose_multiple","choose_multiple_fill","choose_multiple_weighted","choose_mut","choose_stable","choose_weighted","choose_weighted_mut","clone","clone","clone","clone_into","clone_into","clone_into","default","eq","eq","fill","fill_bytes","fill_bytes","fill_bytes","fill_bytes","fmt","fmt","fmt","from","from","from","from_entropy","from_rng","from_rng","from_rng","from_seed","from_seed","from_seed","gen","gen_bool","gen_range","gen_ratio","get_rng","into","into","into","map","ne","ne","next_u32","next_u32","next_u32","next_u32","next_u64","next_u64","next_u64","next_u64","partial_shuffle","random","read","rng","sample","sample","sample_iter","sample_iter","seed_from_u64","shuffle","thread_rng","to_owned","to_owned","to_owned","try_fill","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_fill_bytes","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","vzip","vzip","vzip","Ray","apply_transformation","borrow","borrow_mut","clone","clone_into","direction","from","geometry","into","origin","time","to_owned","try_from","try_into","type_id","vzip","RayTracer","borrow","borrow_mut","default","from","get_local_illumination","into","limit_reflections","limit_weight","max_depth","n_ambient_samples","n_shadow_samples","render","sample_light","trace_ray","try_from","try_into","type_id","vzip","HorizontalCosineWeightedHemisphereSampler","HorizontalDiskUniformSampler","borrow","borrow","borrow_mut","borrow_mut","disk_sampler","from","from","i","into","into","into_iter","into_iter","local_to_world","n_samples","new","new","next","next","radius","rng","sample_cosine_weighted_horizontal_hemisphere","try_from","try_from","try_into","try_into","type_id","type_id","uniform_sample_disc","uniform_sample_hemisphere","uniform_sample_horizontal_disc","uniform_sample_triangle","vzip","vzip","Object","Scene","accelerator","back_material_index","borrow","borrow","borrow_mut","borrow_mut","build_accelerator","cast_ray","clone","clone_into","count_all_lights","default","distant_lights","from","from","from_radiance","from_radiance_source","front_material_index","into","into","lights","materials","new","objects","primitive","push_material","push_object","to_owned","try_from","try_from","try_into","try_into","type_id","type_id","unobstructed_distance","vzip","vzip"],"q":["rendering","","","","","","","","","","","","","","","","","","rendering::bvh","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::bvh::FlatNode","","rendering::bvh::Node","","rendering::camera","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::colour","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::film","","","","","","","","","","","rendering::from_radiance","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::image","","","","","","","","","","","","","","","","","","rendering::interaction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::interaction::Interaction","","rendering::material","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::material::Material","","","","rendering::primitive","","","","","","","","","","","","","","","","","","","","","","","rendering::primitive::Primitive","","","","rendering::primitive_samplers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::rand","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::ray","","","","","","","","","","","","","","","","","rendering::ray_tracer","","","","","","","","","","","","","","","","","","","rendering::samplers","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","rendering::scene","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","",""],"d":["","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A struct that is instrumental for building the  …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns an <code>Option&lt;Float, Interaction&gt;</code>, where the <code>Float</code> is …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks if a ray can travel a certain distance without …","","","","","","","","","","","","","","Used for getting a sample ray from the <code>Camera</code>","","","","","","","","","","Horizontal angle of the Field of View (i.e., frustum) in …","","","Gets the film resolution (width,height) in pixels","","","","","Generates a ray and","","","","","","The position (x,y) within the <code>Film</code>","The position within the Lens of the camera","Time at which the ray will be emmited","","","","","","","","","","A <code>Vector3D</code> which is the result of …","Borrows the view","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","return the Width/height ratio","","","","","Contains the number of Pixels in Width and Height","","","","","","","","","Consumes a Light material","Consumes a Metal material","Consumes a Light material","","Consume object","Consumes a Plastic material","Consumes a polygon","Consumes a sphere","Consumes a sphere","Retrieves a token and advances.","","","","","","","","","","","Advances until reaching the next token","","","","","A buffer with all the physical values in the image (i.e., …","","","","","Number of rows","","","","Creates a new empty <code>ImageBuffer</code>","All the pixels, iterating from top to bottom, left to right","","Saves the image in HDRE format","","","","","Number of columns","","","","","The data for a SurfaceInteraction","","","","","","","","","Partial derivative of the normal <code>n</code> with respect to u","Partial derivative of the normal <code>n</code> with respect to v","Partial derivative of the position <code>p</code> with respect to <code>u</code>","Partial derivative of the position <code>p</code> with respect to <code>v</code>","","","","","Stores the shading information based on pure geometry","","","","Checks whether an <code>Interaction</code> is Surface","","","Retrieves the normal of the <code>SurfaceInteractionData</code>. …","","The normal <code>Vector3D</code> at the interaction. Must have the …","The <code>Point3D</code> of the interaction","The index of the primitive in the primitives array","","Stores the shading information after being  perturbed by a …","The time of the intersection","","","","","","","","","","","","","","","","","","The outgoing direction at the interaction.  This is the …","","","","","","","","","","","","","","","Retrieves the Colour of the material. This will usually …","Should this material be tested for direct illumination?    ","Should this material emits light    ","","","","","","","","","","","Samples the bsdf, returns a new direction, the probability …","Does this material scatter (e.g., like [<code>Plastic</code>]) or does …","","","","","","","","","","","","","","","","","","","","","","","","","","The name of the <code>Primitive</code>. Useful for debugging.","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","","","Intersects an object with a [<code>Ray3D]</code> (IN WORLD COORDINATES) …","","","","","","Gets a <code>BBox3D</code> bounding the primitive, in world’s …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","It is always in the same direction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","A marker trait used to indicate that an <code>RngCore</code> or …","Types (distributions) that can be used to create a random …","The element type.","Extension trait on iterators, providing random sampling …","","An automatically-implemented extension trait on <code>RngCore</code> …","The core of a random number generator.","Seed type, which is restricted to types …","A random number generator that can be explicitly seeded.","Extension trait on slices, providing random mutation and …","A small-state, fast non-crypto PRNG","The standard RNG. The PRNG algorithm in <code>StdRng</code> is chosen …","A reference to the thread-local generator","","","","","","","Returns a reference to one random element of the slice, or …","Choose one element at random from the iterator.","Chooses <code>amount</code> elements from the slice at random, without …","Collects <code>amount</code> values at random from the iterator into a …","Collects values at random from the iterator into a …","Similar to <code>choose_multiple</code>, but where the likelihood of …","Returns a mutable reference to one random element of the …","Choose one element at random from the iterator.","Similar to <code>choose</code>, but where the likelihood of each …","Similar to <code>choose_mut</code>, but where the likelihood of each …","","","","","","","","","","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> with random data.","","","","","","","","","","Creates a new instance of the RNG seeded via <code>getrandom</code>.","","","Create a new PRNG seeded from another <code>Rng</code>.","Create a new PRNG using the given seed.","","","Return a random value supporting the <code>Standard</code> distribution.","Return a bool with a probability <code>p</code> of being true.","Generate a random value in the given range.","Return a bool with a probability of <code>numerator/denominator</code> …","Gets a random number generator for Montecarlo estimations","","","","Create a distribution of values of ‘S’ by mapping the …","","","Return the next random <code>u32</code>.","","","","Return the next random <code>u64</code>.","","","","Shuffle a slice in place, but exit early.","Generates a random value using the thread-local random …","","","Generate a random value of <code>T</code>, using <code>rng</code> as the source of …","Sample a new value, using the given distribution.","Create an iterator that generates random values of <code>T</code>, …","Create an iterator that generates values using the given …","Create a new PRNG using a <code>u64</code> seed.","Shuffle a mutable slice in place.","Retrieve the lazily-initialized thread-local random number …","","","","Fill any type implementing <code>Fill</code> with random data","Fill <code>dest</code> entirely with random data.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Calculates the luminance produced by the direct sources in …","","","","","","","","","Recursively traces a ray","","","","","","","","","","","","","","","","","","","","","","","","","","","Gets a random <code>Vector3D</code>, distributed according to <code>cos(theta)</code>…","","","","","","","","","","","","","","","","","","","","","Builds the accelerator","Casts a <code>Ray3D</code> and returns an …","","","Returns the number of total lights; that is,  those in the …","","A vector of [<code>Light</code>] objects that are considered sources of …","","","Reads a Radiance file and builds a scene.","Creates a scene from a slice of bytes read from a  …","","","","A vector of [<code>Light</code>] objects that are considered sources of …","The materials in the scene","Creates an empty scene","Objects in the scene that are not tested directly for …","","Pushes a <code>Material</code> to the <code>Scene</code>","Pushes an <code>Object</code> into the <code>Scene</code>","","","","","","","","Checks whether a <code>Ray3D</code> can travel a certain distance …","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,2,3,0,2,3,0,0,4,5,6,7,2,4,3,8,1,5,6,7,2,4,3,8,1,2,3,5,6,7,4,8,5,7,8,8,8,1,6,1,5,6,7,2,4,3,8,1,0,5,1,5,6,7,2,4,3,8,1,6,5,1,2,2,2,4,7,8,5,6,7,2,4,3,8,1,5,6,7,2,4,3,8,1,5,6,7,2,4,3,8,1,1,5,6,7,2,4,3,8,1,9,10,11,12,0,0,0,0,13,14,15,13,14,15,13,13,15,15,16,15,13,14,15,16,15,13,14,15,15,14,14,14,13,14,15,13,14,15,13,14,15,15,16,15,15,13,13,13,13,14,15,0,0,0,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,0,18,18,18,18,18,18,18,18,18,18,0,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,0,20,20,0,20,20,20,20,20,20,20,0,20,20,20,20,20,20,21,0,0,21,0,22,21,23,22,21,23,23,23,23,23,23,23,21,22,21,23,22,22,21,23,21,23,21,22,21,23,22,22,23,22,22,23,22,23,22,21,23,22,21,23,22,21,23,23,23,22,21,23,22,24,25,26,0,26,26,26,0,27,26,27,26,27,27,26,26,26,27,26,0,27,26,27,26,0,0,27,26,26,27,27,26,27,26,27,26,27,26,28,29,30,31,32,0,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,32,33,34,35,36,0,0,0,0,0,0,37,37,38,37,39,40,41,42,38,37,39,40,41,42,37,40,41,42,38,37,39,40,41,42,37,40,41,42,38,37,39,40,41,42,38,37,39,40,41,42,37,40,41,42,38,37,39,40,41,42,40,42,40,41,42,38,39,40,42,37,40,41,42,0,0,0,0,0,0,0,38,39,0,0,0,0,38,37,39,40,41,42,38,37,39,40,41,42,38,37,39,40,41,42,38,37,39,40,41,42,43,44,0,0,45,0,0,0,0,46,0,0,0,0,0,43,44,47,43,44,47,45,48,45,48,48,45,45,48,45,45,43,44,47,43,44,47,47,43,44,49,50,43,44,47,43,44,47,43,44,47,46,43,44,46,46,43,44,49,49,49,49,0,43,44,47,51,43,44,50,43,44,47,50,43,44,47,45,0,50,47,51,49,51,49,46,45,0,43,44,47,49,50,43,44,47,43,44,47,43,44,47,43,44,47,43,44,47,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,53,0,0,54,55,54,55,55,54,55,54,54,55,54,55,0,54,54,55,54,55,54,54,0,54,55,54,55,54,55,0,0,0,0,54,55,0,0,56,57,57,56,57,56,56,56,57,57,56,56,56,57,56,56,56,57,57,56,56,56,56,56,57,56,56,57,57,56,57,56,57,56,56,57,56],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["bbox3d",3]],[[],["bbox3d",3]],null,null,null,null,null,null,null,[[],["bucketinfo",3]],[[]],null,[[],["boundingvolumetree",3]],null,[[["node",4],["vec",3]],["usize",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["usize",15],["point3d",3],["bboxaxis",4],["f64",15]],["usize",15]],null,[[["vec",3],["ray3d",3]],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,[[["usize",15],["object",3]]],[[["scene",3]]],[[["node",4],["bboxaxis",4]]],[[["usize",15],["bbox3d",3]]],[[["usize",15],["vec",3],["usize",15],["vec",3],["vec",3]]],null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["f64",15],["vec",3],["ray3d",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],[[]],[[]],[[["camerasample",3]]],[[["camerasample",3]]],[[]],[[]],[[]],[[["view",3],["film",3]]],null,null,null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,[[],["view",3]],[[],["view",3]],null,null,null,null,[[]],[[]],[[]],null,null,null,[[]],[[]],[[]],null,[[]],[[]],[[],["rgbspectrum",3]],[[]],[[["f64",15]]],[[["f64",15]]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[["f64",15]]],null,[[]],[[],["bool",15]],[[]],[[["f64",15]]],[[]],[[["f64",15]]],[[]],null,[[]],[[],["string",3]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[]],null,[[],["f64",15]],[[]],[[]],[[]],[[]],null,[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[],["bool",15]],[[["scene",3],["string",3]]],[[["scene",3],["string",3]]],[[["scene",3],["string",3]]],[[],["bool",15]],[[["scene",3]]],[[["scene",3],["string",3]]],[[["scene",3],["string",3]]],[[["scene",3],["string",3]]],[[["scene",3],["string",3]]],[[],["string",3]],[[],["bool",15]],null,[[],["scanner",3]],[[["string",3]]],[[]],[[["string",3]],["usize",15]],[[]],null,null,null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[["f64",15]]],[[]],null,[[]],[[]],[[]],[[["usize",15]]],null,[[["f64",15]]],[[["string",3]]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["shadinginfo",3]],[[]],null,null,null,null,[[["formatter",3]],["result",6]],[[]],[[]],[[]],null,[[]],[[]],[[]],[[],["bool",15]],[[["vector3d",3],["surfaceside",4],["f64",15]]],[[["bool",15],["surfaceinteractiondata",3]]],[[],["vector3d",3]],[[],["vector3d",3]],null,null,null,null,null,null,[[]],[[["transform",3]]],[[["transform",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],null,null,[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[["vector3d",3],["randgen",6]]],null,[[],["spectrum",6]],[[],["bool",15]],[[],["bool",15]],[[["vector3d",3]],["f64",15]],[[["vector3d",3]],["f64",15]],[[["vector3d",3]],["f64",15]],[[]],[[]],[[]],[[]],[[["vector3d",3]]],[[["vector3d",3]],["vector3d",3]],null,[[["vector3d",3],["randgen",6]]],[[],["bool",15]],null,[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],null,null,null,null,null,null,null,null,null,[[]],[[]],[[],["primitive",4]],[[]],[[["point3d",3]]],[[["usize",15],["point3d",3]],[["box",3,["iterator"]],["iterator",8]]],[[]],[[],["str",15]],[[["ray3d",3]],[["intersectioninfo",3],["option",4,["intersectioninfo"]]]],[[]],[[["point3d",3]],["f64",15]],[[["ray3d",3]],[["option",4,["point3d"]],["point3d",3]]],[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],[[],["bbox3d",3]],null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],[[],["option",4]],null,null,null,null,null,null,null,null,null,null,null,null,null,[[["point3d",3],["distantsource3d",3]]],[[["usize",15],["point3d",3],["distantsource3d",3]],[["box",3,["iterator"]],["iterator",8]]],[[["point3d",3],["distantsource3d",3]],["f64",15]],[[["sphere3d",3],["point3d",3]]],[[["sphere3d",3],["point3d",3],["usize",15]],[["box",3,["iterator"]],["iterator",8]]],[[["sphere3d",3],["point3d",3]],["f64",15]],[[["sphere3d",3],["usize",15]],[["box",3,["iterator"]],["iterator",8]]],null,null,[[["point3d",3],["triangle3d",3]]],[[["usize",15],["point3d",3],["triangle3d",3]],[["box",3,["iterator"]],["iterator",8]]],[[["point3d",3],["triangle3d",3]],["f64",15]],[[["usize",15],["triangle3d",3]],[["box",3,["iterator"]],["iterator",8]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],[[]],[[]],[[]],null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[]],[[],["option",4]],[[],["option",4]],[[["usize",15]],["slicechooseiter",3]],[[["usize",15]],[["vec",3,["global"]],["global",3]]],[[],["usize",15]],[[["usize",15]],[["slicechooseiter",3],["weightederror",4],["result",4,["slicechooseiter","weightederror"]]]],[[],["option",4]],[[],["option",4]],[[],[["weightederror",4],["result",4,["weightederror"]]]],[[],[["weightederror",4],["result",4,["weightederror"]]]],[[],["smallrng",3]],[[],["stdrng",3]],[[],["threadrng",3]],[[]],[[]],[[]],[[],["threadrng",3]],[[["smallrng",3]],["bool",15]],[[["stdrng",3]],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[["formatter",3]],[["error",3],["result",4,["error"]]]],[[]],[[]],[[]],[[]],[[],[["result",4,["smallrng","error"]],["smallrng",3],["error",3]]],[[],[["error",3],["result",4,["stdrng","error"]],["stdrng",3]]],[[],[["result",4,["error"]],["error",3]]],[[]],[[],["smallrng",3]],[[],["stdrng",3]],[[]],[[["f64",15]],["bool",15]],[[]],[[["u32",15]],["bool",15]],[[],["randgen",6]],[[]],[[]],[[]],[[],["distmap",3]],[[["smallrng",3]],["bool",15]],[[["stdrng",3]],["bool",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[],["u64",15]],[[["usize",15]]],[[]],[[],[["usize",15],["result",4,["usize","error"]],["error",3]]],null,[[]],[[]],[[],["distiter",3]],[[],["distiter",3]],[[["u64",15]]],[[]],[[],["threadrng",3]],[[]],[[]],[[]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],[["result",4,["error"]],["error",3]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[]],[[]],[[]],null,[[["transform",3]]],[[]],[[]],[[],["ray",3]],[[]],[[],["vector3d",3]],[[]],null,[[]],[[],["point3d",3]],null,[[]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,[[]],[[]],[[]],[[]],[[["vector3d",3],["point3d",3],["scene",3],["material",4]],["spectrum",6]],[[]],null,null,null,null,null,[[["camera",8],["scene",3]],["imagebuffer",3]],[[["ray3d",3],["scene",3],["object",3]]],[[["ray",3],["usize",15],["randgen",6],["scene",3],["f64",15]],["spectrum",6]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[]],null,null,[[]],[[]],[[]],[[]],null,[[]],[[]],null,[[]],[[]],[[]],[[]],[[["vector3d",3],["point3d",3],["f64",15]]],null,[[["usize",15],["f64",15]]],[[["usize",15]]],[[],["option",4]],[[],["option",4]],null,null,[[["randgen",6]],["vector3d",3]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["vector3d",3],["randgen",6],["point3d",3],["f64",15]],["point3d",3]],[[["vector3d",3],["randgen",6]],["vector3d",3]],[[["f64",15],["randgen",6]]],[[["point3d",3],["randgen",6]],["point3d",3]],[[]],[[]],null,null,null,null,[[]],[[]],[[]],[[]],[[]],[[["ray",3]],["option",4]],[[],["object",3]],[[]],[[],["usize",15]],[[],["scene",3]],null,[[]],[[]],[[["string",3]]],[[]],null,[[]],[[]],null,null,[[]],null,null,[[["material",4]],["usize",15]],[[["usize",15],["primitive",4]],["usize",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[["f64",15],["ray3d",3]],["bool",15]],[[]],[[]]],"p":[[3,"BoundingVolumeTree"],[4,"Node"],[4,"FlatNode"],[3,"FlatInterior"],[3,"ObjectInfo"],[3,"Leaf"],[3,"Interior"],[3,"BucketInfo"],[13,"Interior"],[13,"Leaf"],[13,"Interior"],[13,"Leaf"],[3,"View"],[3,"CameraSample"],[3,"PinholeCam"],[8,"Camera"],[3,"RGBSpectrum"],[3,"Film"],[3,"Scanner"],[3,"ImageBuffer"],[4,"Interaction"],[3,"SurfaceInteractionData"],[3,"ShadingInfo"],[13,"Surface"],[13,"Endpoint"],[4,"Material"],[3,"PlasticMetal"],[13,"Plastic"],[13,"Metal"],[13,"Light"],[13,"Mirror"],[4,"Primitive"],[13,"Sphere"],[13,"Triangle"],[13,"Cylinder"],[13,"Source"],[3,"TriangleSurfaceSampler"],[3,"TriangleDirectionSampler"],[3,"InsideSphereDirectionSampler"],[3,"SphereDirectionSampler"],[3,"SphereSurfaceSampler"],[3,"DistantSourceSampler"],[3,"SmallRng"],[3,"StdRng"],[8,"SliceRandom"],[8,"SeedableRng"],[3,"ThreadRng"],[8,"IteratorRandom"],[8,"Rng"],[8,"RngCore"],[8,"Distribution"],[3,"Ray"],[3,"RayTracer"],[3,"HorizontalDiskUniformSampler"],[3,"HorizontalCosineWeightedHemisphereSampler"],[3,"Scene"],[3,"Object"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};